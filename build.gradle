buildscript {
    ext {
        gdxVersion = '1.10.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }

    dependencies {
        classpath "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "pong"
        gdxVersion = '1.10.0'
        roboVMVersion = '2.3.12'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.3'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.1.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}


project(":desktop") {
    apply plugin: "java-library"


    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        
    }
}

project(":core") {
    apply plugin: "java-library"


    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        
    }
}

// Store the parameters you want to pass the texturePacker here...
project.ext.texturePacker = [ "core/assets/images", "core/assets", "assets" ]

// Import the texture packer
import com.badlogic.gdx.tools.texturepacker.TexturePacker

// Add a new task that packs the textures for you
task texturePacker {
    doLast {
        if (project.ext.has('texturePacker')) {
            logger.info "Calling TexturePacker: "+texturePacker
            TexturePacker.process(texturePacker[0], texturePacker[1], texturePacker[2])
        }
    }
}